package com.example.demo.datasource.sqlserver.domain;
// Generated Sep 8, 2017 3:06:00 PM by Hibernate Tools 4.3.1.Final

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * FleetTripDetail generated by hbm2java
 */
@Entity
@Table(name = "FleetTripDetail", schema = "dbo", catalog = "FMS4.0")
public class FleetTripDetail implements java.io.Serializable {

	private int id;
	private int fleetId;
	private Boolean isCurrentTrip;
	private Boolean isTripComplete;
	private Integer sequenceofTrip;
	private Date tripStartTime;
	private Date tripEndTime;
	private Date createdOn;
	private Serializable reason;
	private Double missedKms;
	private Boolean isManualOverRidden;
	private Double tripEndReading;
	private Double tripStartReading;
	private Double manualReadingRecorded;
	private Serializable createdBy;
	private Serializable modifiedBy;
	private Date modifiedOn;
	private boolean isTripStarted;
	private Boolean isRouteDeviated;
	private Boolean pickUpOrDrop;

	public FleetTripDetail() {
	}

	public FleetTripDetail(int id, int fleetId, boolean isTripStarted) {
		this.id = id;
		this.fleetId = fleetId;
		this.isTripStarted = isTripStarted;
	}

	public FleetTripDetail(int id, int fleetId, Boolean isCurrentTrip, Boolean isTripComplete, Integer sequenceofTrip,
			Date tripStartTime, Date tripEndTime, Date createdOn, Serializable reason, Double missedKms,
			Boolean isManualOverRidden, Double tripEndReading, Double tripStartReading, Double manualReadingRecorded,
			Serializable createdBy, Serializable modifiedBy, Date modifiedOn, boolean isTripStarted,
			Boolean isRouteDeviated, Boolean pickUpOrDrop) {
		this.id = id;
		this.fleetId = fleetId;
		this.isCurrentTrip = isCurrentTrip;
		this.isTripComplete = isTripComplete;
		this.sequenceofTrip = sequenceofTrip;
		this.tripStartTime = tripStartTime;
		this.tripEndTime = tripEndTime;
		this.createdOn = createdOn;
		this.reason = reason;
		this.missedKms = missedKms;
		this.isManualOverRidden = isManualOverRidden;
		this.tripEndReading = tripEndReading;
		this.tripStartReading = tripStartReading;
		this.manualReadingRecorded = manualReadingRecorded;
		this.createdBy = createdBy;
		this.modifiedBy = modifiedBy;
		this.modifiedOn = modifiedOn;
		this.isTripStarted = isTripStarted;
		this.isRouteDeviated = isRouteDeviated;
		this.pickUpOrDrop = pickUpOrDrop;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "FleetId", nullable = false)
	public int getFleetId() {
		return this.fleetId;
	}

	public void setFleetId(int fleetId) {
		this.fleetId = fleetId;
	}

	@Column(name = "IsCurrentTrip")
	public Boolean getIsCurrentTrip() {
		return this.isCurrentTrip;
	}

	public void setIsCurrentTrip(Boolean isCurrentTrip) {
		this.isCurrentTrip = isCurrentTrip;
	}

	@Column(name = "IsTripComplete")
	public Boolean getIsTripComplete() {
		return this.isTripComplete;
	}

	public void setIsTripComplete(Boolean isTripComplete) {
		this.isTripComplete = isTripComplete;
	}

	@Column(name = "SequenceofTrip")
	public Integer getSequenceofTrip() {
		return this.sequenceofTrip;
	}

	public void setSequenceofTrip(Integer sequenceofTrip) {
		this.sequenceofTrip = sequenceofTrip;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TripStartTime", length = 23)
	public Date getTripStartTime() {
		return this.tripStartTime;
	}

	public void setTripStartTime(Date tripStartTime) {
		this.tripStartTime = tripStartTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "TripEndTime", length = 23)
	public Date getTripEndTime() {
		return this.tripEndTime;
	}

	public void setTripEndTime(Date tripEndTime) {
		this.tripEndTime = tripEndTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedOn", length = 23)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "Reason")
	public Serializable getReason() {
		return this.reason;
	}

	public void setReason(Serializable reason) {
		this.reason = reason;
	}

	@Column(name = "MissedKMs", precision = 53, scale = 0)
	public Double getMissedKms() {
		return this.missedKms;
	}

	public void setMissedKms(Double missedKms) {
		this.missedKms = missedKms;
	}

	@Column(name = "IsManualOverRidden")
	public Boolean getIsManualOverRidden() {
		return this.isManualOverRidden;
	}

	public void setIsManualOverRidden(Boolean isManualOverRidden) {
		this.isManualOverRidden = isManualOverRidden;
	}

	@Column(name = "TripEndReading", precision = 53, scale = 0)
	public Double getTripEndReading() {
		return this.tripEndReading;
	}

	public void setTripEndReading(Double tripEndReading) {
		this.tripEndReading = tripEndReading;
	}

	@Column(name = "TripStartReading", precision = 53, scale = 0)
	public Double getTripStartReading() {
		return this.tripStartReading;
	}

	public void setTripStartReading(Double tripStartReading) {
		this.tripStartReading = tripStartReading;
	}

	@Column(name = "ManualReadingRecorded", precision = 53, scale = 0)
	public Double getManualReadingRecorded() {
		return this.manualReadingRecorded;
	}

	public void setManualReadingRecorded(Double manualReadingRecorded) {
		this.manualReadingRecorded = manualReadingRecorded;
	}

	@Column(name = "CreatedBy")
	public Serializable getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Serializable createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "ModifiedBy")
	public Serializable getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Serializable modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedOn", length = 23)
	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	@Column(name = "IsTripStarted", nullable = false)
	public boolean isIsTripStarted() {
		return this.isTripStarted;
	}

	public void setIsTripStarted(boolean isTripStarted) {
		this.isTripStarted = isTripStarted;
	}

	@Column(name = "IsRouteDeviated")
	public Boolean getIsRouteDeviated() {
		return this.isRouteDeviated;
	}

	public void setIsRouteDeviated(Boolean isRouteDeviated) {
		this.isRouteDeviated = isRouteDeviated;
	}

	@Column(name = "PickUpOrDrop")
	public Boolean getPickUpOrDrop() {
		return this.pickUpOrDrop;
	}

	public void setPickUpOrDrop(Boolean pickUpOrDrop) {
		this.pickUpOrDrop = pickUpOrDrop;
	}

}
