package com.example.demo.datasource.sqlserver.domain;
// Generated Sep 8, 2017 3:06:00 PM by Hibernate Tools 4.3.1.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "Users", schema = "dbo", catalog = "FMS4.0", uniqueConstraints = @UniqueConstraint(columnNames = {
		"LoginID", "id" }))
public class Users implements java.io.Serializable {

	private int id;
	private Integer companyId;
	private Serializable loginId;
	private Serializable password;
	private Serializable firstName;
	private Serializable lastName;
	private Serializable email;
	private Serializable phone;
	private Serializable mobile;
	private Boolean isActive;
	private Serializable createdBy;
	private Date createOn;
	private Serializable modifiedBy;
	private Date modifiedOn;
	private Boolean isDeleted;
	private Boolean isMobileUser;
	private Set<UserGroupMapping> userGroupMappings = new HashSet<UserGroupMapping>(0);
	private Set<Userprofile> userprofiles = new HashSet<Userprofile>(0);

	public Users() {
	}

	public Users(int id, Serializable loginId, Serializable password) {
		this.id = id;
		this.loginId = loginId;
		this.password = password;
	}

	public Users(int id, Integer companyId, Serializable loginId, Serializable password, Serializable firstName,
			Serializable lastName, Serializable email, Serializable phone, Serializable mobile, Boolean isActive,
			Serializable createdBy, Date createOn, Serializable modifiedBy, Date modifiedOn, Boolean isDeleted,
			Boolean isMobileUser, Set<UserGroupMapping> userGroupMappings, Set<Userprofile> userprofiles) {
		this.id = id;
		this.companyId = companyId;
		this.loginId = loginId;
		this.password = password;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.phone = phone;
		this.mobile = mobile;
		this.isActive = isActive;
		this.createdBy = createdBy;
		this.createOn = createOn;
		this.modifiedBy = modifiedBy;
		this.modifiedOn = modifiedOn;
		this.isDeleted = isDeleted;
		this.isMobileUser = isMobileUser;
		this.userGroupMappings = userGroupMappings;
		this.userprofiles = userprofiles;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "CompanyID")
	public Integer getCompanyId() {
		return this.companyId;
	}

	public void setCompanyId(Integer companyId) {
		this.companyId = companyId;
	}

	@Column(name = "LoginID", nullable = false)
	public Serializable getLoginId() {
		return this.loginId;
	}

	public void setLoginId(Serializable loginId) {
		this.loginId = loginId;
	}

	@Column(name = "Password", nullable = false)
	public Serializable getPassword() {
		return this.password;
	}

	public void setPassword(Serializable password) {
		this.password = password;
	}

	@Column(name = "FirstName")
	public Serializable getFirstName() {
		return this.firstName;
	}

	public void setFirstName(Serializable firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LastName")
	public Serializable getLastName() {
		return this.lastName;
	}

	public void setLastName(Serializable lastName) {
		this.lastName = lastName;
	}

	@Column(name = "Email")
	public Serializable getEmail() {
		return this.email;
	}

	public void setEmail(Serializable email) {
		this.email = email;
	}

	@Column(name = "Phone")
	public Serializable getPhone() {
		return this.phone;
	}

	public void setPhone(Serializable phone) {
		this.phone = phone;
	}

	@Column(name = "Mobile")
	public Serializable getMobile() {
		return this.mobile;
	}

	public void setMobile(Serializable mobile) {
		this.mobile = mobile;
	}

	@Column(name = "IsActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "CreatedBy")
	public Serializable getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Serializable createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreateOn", length = 23)
	public Date getCreateOn() {
		return this.createOn;
	}

	public void setCreateOn(Date createOn) {
		this.createOn = createOn;
	}

	@Column(name = "ModifiedBy")
	public Serializable getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Serializable modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ModifiedOn", length = 23)
	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	@Column(name = "IsDeleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "IsMobileUser")
	public Boolean getIsMobileUser() {
		return this.isMobileUser;
	}

	public void setIsMobileUser(Boolean isMobileUser) {
		this.isMobileUser = isMobileUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserGroupMapping> getUserGroupMappings() {
		return this.userGroupMappings;
	}

	public void setUserGroupMappings(Set<UserGroupMapping> userGroupMappings) {
		this.userGroupMappings = userGroupMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Userprofile> getUserprofiles() {
		return this.userprofiles;
	}

	public void setUserprofiles(Set<Userprofile> userprofiles) {
		this.userprofiles = userprofiles;
	}

}
