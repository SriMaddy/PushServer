package com.example.demo.datasource.sqlserver.domain;
// Generated Sep 8, 2017 3:06:00 PM by Hibernate Tools 4.3.1.Final

import java.io.Serializable;
import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DailyVehicleSummary generated by hbm2java
 */
@Entity
@Table(name = "DailyVehicleSummary", schema = "dbo", catalog = "FMS4.0")
public class DailyVehicleSummary implements java.io.Serializable {

	private DailyVehicleSummaryId id;
	private int groupId;
	private Date date;
	private int stoppage;
	private int running;
	private int idle;
	private double distance;
	private int overSpeed;
	private Integer crossBorder;
	private int routeDeviate;
	private int missedStop;
	private Integer panic;
	private Double fuelConsume;
	private Serializable meterStart;
	private Serializable meterEnd;
	private Serializable gpsodometer;

	public DailyVehicleSummary() {
	}

	public DailyVehicleSummary(DailyVehicleSummaryId id, int groupId, Date date, int stoppage, int running, int idle,
			double distance, int overSpeed, int routeDeviate, int missedStop) {
		this.id = id;
		this.groupId = groupId;
		this.date = date;
		this.stoppage = stoppage;
		this.running = running;
		this.idle = idle;
		this.distance = distance;
		this.overSpeed = overSpeed;
		this.routeDeviate = routeDeviate;
		this.missedStop = missedStop;
	}

	public DailyVehicleSummary(DailyVehicleSummaryId id, int groupId, Date date, int stoppage, int running, int idle,
			double distance, int overSpeed, Integer crossBorder, int routeDeviate, int missedStop, Integer panic,
			Double fuelConsume, Serializable meterStart, Serializable meterEnd, Serializable gpsodometer) {
		this.id = id;
		this.groupId = groupId;
		this.date = date;
		this.stoppage = stoppage;
		this.running = running;
		this.idle = idle;
		this.distance = distance;
		this.overSpeed = overSpeed;
		this.crossBorder = crossBorder;
		this.routeDeviate = routeDeviate;
		this.missedStop = missedStop;
		this.panic = panic;
		this.fuelConsume = fuelConsume;
		this.meterStart = meterStart;
		this.meterEnd = meterEnd;
		this.gpsodometer = gpsodometer;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "id", column = @Column(name = "Id", nullable = false)),
			@AttributeOverride(name = "vehicleNumber", column = @Column(name = "VehicleNumber", nullable = false)) })
	public DailyVehicleSummaryId getId() {
		return this.id;
	}

	public void setId(DailyVehicleSummaryId id) {
		this.id = id;
	}

	@Column(name = "GroupId", nullable = false)
	public int getGroupId() {
		return this.groupId;
	}

	public void setGroupId(int groupId) {
		this.groupId = groupId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Date", nullable = false, length = 23)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "Stoppage", nullable = false)
	public int getStoppage() {
		return this.stoppage;
	}

	public void setStoppage(int stoppage) {
		this.stoppage = stoppage;
	}

	@Column(name = "Running", nullable = false)
	public int getRunning() {
		return this.running;
	}

	public void setRunning(int running) {
		this.running = running;
	}

	@Column(name = "Idle", nullable = false)
	public int getIdle() {
		return this.idle;
	}

	public void setIdle(int idle) {
		this.idle = idle;
	}

	@Column(name = "Distance", nullable = false, precision = 53, scale = 0)
	public double getDistance() {
		return this.distance;
	}

	public void setDistance(double distance) {
		this.distance = distance;
	}

	@Column(name = "OverSpeed", nullable = false)
	public int getOverSpeed() {
		return this.overSpeed;
	}

	public void setOverSpeed(int overSpeed) {
		this.overSpeed = overSpeed;
	}

	@Column(name = "CrossBorder")
	public Integer getCrossBorder() {
		return this.crossBorder;
	}

	public void setCrossBorder(Integer crossBorder) {
		this.crossBorder = crossBorder;
	}

	@Column(name = "RouteDeviate", nullable = false)
	public int getRouteDeviate() {
		return this.routeDeviate;
	}

	public void setRouteDeviate(int routeDeviate) {
		this.routeDeviate = routeDeviate;
	}

	@Column(name = "MissedStop", nullable = false)
	public int getMissedStop() {
		return this.missedStop;
	}

	public void setMissedStop(int missedStop) {
		this.missedStop = missedStop;
	}

	@Column(name = "Panic")
	public Integer getPanic() {
		return this.panic;
	}

	public void setPanic(Integer panic) {
		this.panic = panic;
	}

	@Column(name = "FuelConsume", precision = 53, scale = 0)
	public Double getFuelConsume() {
		return this.fuelConsume;
	}

	public void setFuelConsume(Double fuelConsume) {
		this.fuelConsume = fuelConsume;
	}

	@Column(name = "MeterStart")
	public Serializable getMeterStart() {
		return this.meterStart;
	}

	public void setMeterStart(Serializable meterStart) {
		this.meterStart = meterStart;
	}

	@Column(name = "MeterEnd")
	public Serializable getMeterEnd() {
		return this.meterEnd;
	}

	public void setMeterEnd(Serializable meterEnd) {
		this.meterEnd = meterEnd;
	}

	@Column(name = "GPSOdometer")
	public Serializable getGpsodometer() {
		return this.gpsodometer;
	}

	public void setGpsodometer(Serializable gpsodometer) {
		this.gpsodometer = gpsodometer;
	}

}
